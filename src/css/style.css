/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@font-face {
  font-family: "HelveticaNeue-Bold";
  src: url("../fonts/HelveticaNeue-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeue-Bold.woff") format("woff"), url("../fonts/HelveticaNeue-Bold.ttf") format("truetype"), url("../fonts/HelveticaNeue-Bold.svg#HelveticaNeue-Bold") format("svg");
  font-weight: normal;
  font-style: normal; }

/**
 * Owl Carousel v2.3.4
 * Copyright 2013-2018 David Deutsch
 * Licensed under: SEE LICENSE IN https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE
 */
.owl-carousel,
.owl-carousel .owl-item {
  -webkit-tap-highlight-color: transparent;
  position: relative; }

.owl-carousel {
  display: none;
  width: 100%;
  z-index: 1; }

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden; }

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0; }

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  -webkit-transform: translate3d(0, 0, 0); }

.owl-carousel .owl-item,
.owl-carousel .owl-wrapper {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0); }

.owl-carousel .owl-item {
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-touch-callout: none; }

.owl-carousel .owl-item img {
  display: block;
  width: 100%; }

.owl-carousel .owl-dots.disabled,
.owl-carousel .owl-nav.disabled {
  display: none; }

.no-js .owl-carousel,
.owl-carousel.owl-loaded {
  display: block; }

.owl-carousel .owl-dot,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-nav .owl-prev {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.owl-carousel .owl-nav button.owl-next,
.owl-carousel .owl-nav button.owl-prev,
.owl-carousel button.owl-dot {
  background: 0 0;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit; }

.owl-carousel.owl-loading {
  opacity: 0;
  display: block; }

.owl-carousel.owl-hidden {
  opacity: 0; }

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden; }

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.owl-carousel.owl-grab {
  cursor: move;
  cursor: grab; }

.owl-carousel.owl-rtl {
  direction: rtl; }

.owl-carousel.owl-rtl .owl-item {
  float: right; }

.owl-carousel .animated {
  animation-duration: 1s;
  animation-fill-mode: both; }

.owl-carousel .owl-animated-in {
  z-index: 0; }

.owl-carousel .owl-animated-out {
  z-index: 1; }

.owl-carousel .fadeOut {
  animation-name: fadeOut; }

@keyframes fadeOut {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

.owl-height {
  transition: height 0.5s ease-in-out; }

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  transition: opacity 0.4s ease; }

.owl-carousel .owl-item .owl-lazy:not([src]),
.owl-carousel .owl-item .owl-lazy[src^=""] {
  max-height: 0; }

.owl-carousel .owl-item img.owl-lazy {
  transform-style: preserve-3d; }

.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000; }

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 80px;
  width: 80px;
  left: 50%;
  top: 50%;
  margin-left: -40px;
  margin-top: -40px;
  background: url(owl.video.play.png) no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  transition: transform 0.1s ease; }

.owl-carousel .owl-video-play-icon:hover {
  -ms-transform: scale(1.3, 1.3);
  transform: scale(1.3, 1.3); }

.owl-carousel .owl-video-playing .owl-video-play-icon,
.owl-carousel .owl-video-playing .owl-video-tn {
  display: none; }

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  transition: opacity 0.4s ease; }

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%; }

.owl-dots {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  margin-top: 43px; }
  .owl-dots button.owl-dot {
    width: 16px;
    height: 16px;
    background: #fff;
    margin-right: 9px;
    cursor: pointer;
    outline: none;
    border-radius: 50%; }
    .owl-dots button.owl-dot:hover, .owl-dots button.owl-dot.active {
      background: #898989; }

body {
  font-family: "PT Sans", sans-serif;
  font-weight: 400;
  background: #fcdb00; }

* {
  box-sizing: border-box; }

.container {
  width: 960px;
  max-width: 100%;
  margin: 0 auto;
  padding-right: 15px;
  padding-left: 15px;
  overflow: hidden; }
  @media (max-width: 1280px) {
    .container {
      width: 790px; } }
  @media (max-width: 956px) {
    .container {
      width: 600px; } }
  @media (max-width: 768px) {
    .container {
      width: 420px; } }
  @media (max-width: 480px) {
    .container {
      padding-right: 10px;
      padding-left: 10px;
      width: 100%; } }

img {
  width: 100%; }

a {
  text-decoration: none;
  color: #010101; }

ul {
  list-style-type: none; }

h3 {
  font-family: "PT Sans", sans-serif;
  font-weight: 400;
  font-size: 22px;
  line-height: 24px;
  margin: 0; }

.lead {
  font-family: "PT Sans", sans-serif;
  font-weight: 400;
  font-size: 20px;
  line-height: 24px;
  margin: 0;
  padding: 20px 0; }

p {
  font-family: "PT Sans", sans-serif;
  font-weight: 400;
  margin: 0;
  font-size: 16px;
  line-height: 20px; }

.section-title h2,
.banner-title h2 {
  font-family: "PT Sans", sans-serif;
  font-weight: 700;
  font-size: 32px;
  line-height: 30px;
  margin: 0; }

.text-center {
  text-align: center; }

.btn__main {
  font-family: "PT Sans", sans-serif;
  font-weight: 700;
  font-size: 16px;
  line-height: 24px;
  display: inline-block;
  padding: 15px 25px;
  border: none;
  border-radius: 5px;
  width: 125px;
  cursor: pointer; }

.btn__main {
  color: #010101;
  background: #fcdb00;
  transition: all 0.3s ease; }
  .btn__main:hover {
    opacity: 0.8;
    color: #898989; }

.header {
  margin-top: 52px; }
  .header__content {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center; }
    @media (max-width: 768px) {
      .header__content__logo {
        width: 100px; } }
    .header__content__nav ul {
      display: -ms-flexbox;
      display: flex;
      padding: 0;
      margin: 0; }
      .header__content__nav ul li + li {
        margin-left: 70px; }
        @media (max-width: 768px) {
          .header__content__nav ul li + li {
            margin-left: 12px; } }
        @media (max-width: 480px) {
          .header__content__nav ul li + li {
            margin-left: 25px; } }
      .header__content__nav ul a {
        font-family: "PT Sans", sans-serif;
        font-weight: 700;
        font-size: 24px;
        transition: all 0.3s ease; }
        .header__content__nav ul a:hover {
          color: #898989; }
        @media (max-width: 768px) {
          .header__content__nav ul a {
            font-size: 18px; } }
  .header--centered .header__content {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center; }
    .header--centered .header__content__nav {
      font-size: 20px; }
    .header--centered .header__content__logo {
      margin-left: 103px; }
    @media (max-width: 768px) {
      .header--centered .header__content__socials {
        display: none; } }
    .header--centered .header__content__socials i {
      margin-right: 5px;
      font-size: 22px; }
    .header--centered .header__content__socials a {
      transition: all 0.3s ease; }
      .header--centered .header__content__socials a + a {
        padding-left: 10px; }
      .header--centered .header__content__socials a:hover {
        color: #898989; }

.hamburger {
  background: none;
  border: none;
  padding: 0;
  outline: none; }

.hamburger-close {
  background: none;
  border: none;
  padding: 0;
  position: absolute;
  right: 40px;
  top: 40px;
  outline: none; }

.navigation {
  position: fixed;
  z-index: 10;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #fcdb00;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: all 0.3s ease; }
  .navigation.active {
    opacity: 1;
    visibility: visible;
    pointer-events: all; }
  .navigation ul {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }
  .navigation li {
    margin: 30px 0;
    width: 100%;
    text-align: center; }
    .navigation li + li {
      margin-left: 0 !important; }

.banner .owl-carousel .owl-item img {
  width: 317px; }

.banner__item {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between; }
  @media (max-width: 956px) {
    .banner__item {
      display: block; } }

.banner__content {
  padding-top: 50px;
  padding-bottom: 40px; }
  @media (max-width: 768px) {
    .banner__content {
      padding-top: 0; } }
  .banner__content__text {
    margin-right: 173px;
    padding-top: 76px; }
    @media (max-width: 1280px) {
      .banner__content__text {
        margin-right: 70px; } }
    @media (max-width: 956px) {
      .banner__content__text {
        margin-right: 0; } }
  .banner__content__icons i {
    font-size: 48px; }
    .banner__content__icons i + i {
      margin-left: 27px;
      margin-top: 36px; }
  .banner__content__image {
    max-width: 100%; }
    .banner__content__image img {
      width: 317px;
      margin-top: 5px;
      margin-right: 40px; }
      @media (max-width: 956px) {
        .banner__content__image img {
          width: 200px;
          margin: 80px auto 0; } }

.banner__slogan {
  margin: 0;
  text-align: center;
  padding-top: 208px; }
  .banner__slogan .banner-title h2 {
    font-size: 49px;
    line-height: 40px; }
    @media (max-width: 768px) {
      .banner__slogan .banner-title h2 {
        line-height: 50px; } }
  .banner__slogan .lead {
    line-height: 24px;
    padding: 26px 60px; }
    @media (max-width: 768px) {
      .banner__slogan .lead {
        padding: 26px 0; } }

.banner__icons span {
  position: relative;
  top: 0;
  left: 0;
  width: 70px;
  height: 70px;
  display: inline-block;
  border: 2px solid black;
  border-radius: 50%;
  text-align: center; }
  .banner__icons span + span {
    margin-left: 27px;
    margin-right: 9px; }

.banner__icons i {
  position: absolute;
  top: 50%;
  left: 50%;
  -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
  font-size: 32px; }

.banner .owl-dots {
  margin-top: 145px;
  padding-bottom: 47px; }

.features {
  background: #ffffff;
  padding-top: 115px;
  padding-bottom: 78px; }
  .features__items {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin-top: 68px; }
  .features__item {
    position: relative;
    top: 0;
    left: 0;
    display: -ms-flexbox;
    display: flex;
    width: 33%;
    padding-left: 71px;
    padding-bottom: 83px;
    margin-right: -16px; }
    @media (max-width: 956px) {
      .features__item {
        width: 50%;
        padding-left: 55px;
        padding-bottom: 68px; } }
    @media (max-width: 768px) {
      .features__item {
        width: 100%; } }
    .features__item p {
      padding-top: 12px;
      color: #898989; }
    .features__item i {
      position: absolute;
      top: -2px;
      left: 0px;
      font-size: 48px; }
      @media (max-width: 956px) {
        .features__item i {
          top: 1px;
          left: 10px;
          font-size: 30px; } }
  .features .section-title .lead {
    padding-left: 60px;
    padding-right: 60px; }
    @media (max-width: 956px) {
      .features .section-title .lead {
        padding-left: 0;
        padding-right: 0; } }

.advantages {
  background: #ffffff; }
  .advantages__content {
    padding-top: 115px;
    padding-bottom: 93px; }
  .advantages .section-title .lead {
    padding: 15px 60px; }
    @media (max-width: 768px) {
      .advantages .section-title .lead {
        padding: 26px 0; } }
  .advantages__items {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: start;
        align-items: flex-start; }
    @media (max-width: 956px) {
      .advantages__items {
        display: block; } }
  .advantages__tex-column {
    -ms-flex: 1;
        flex: 1; }
    @media (max-width: 956px) {
      .advantages__tex-column {
        display: -ms-flexbox;
        display: flex; } }
    @media (max-width: 768px) {
      .advantages__tex-column {
        -ms-flex-direction: column;
            flex-direction: column; } }
  .advantages__image {
    width: 51%;
    text-align: center;
    margin-top: 48px; }
    @media (max-width: 956px) {
      .advantages__image {
        width: 100%; } }
    .advantages__image img {
      max-width: 317px; }
  .advantages__text {
    margin-top: 107px; }
    .advantages__text + .advantages__text {
      margin-top: 83px; }
      @media (max-width: 956px) {
        .advantages__text + .advantages__text {
          padding-left: 150px;
          margin-top: auto; } }
      @media (max-width: 768px) {
        .advantages__text + .advantages__text {
          -ms-flex-direction: column;
              flex-direction: column;
          padding-left: 0;
          margin-top: 30px; } }
    .advantages__text h3 {
      margin-bottom: 10px; }

.footer {
  background: #010101;
  color: #fff;
  padding-top: 88px; }
  .footer .section-title .lead {
    padding-left: 60px;
    padding-right: 60px; }
    @media (max-width: 956px) {
      .footer .section-title .lead {
        padding-left: 0px;
        padding-right: 0px; } }
  .footer .section-title h2 {
    color: #fcdb00; }
  .footer__newsletter form {
    padding-top: 20px;
    margin-bottom: 70px; }
    .footer__newsletter form input {
      width: 580px;
      padding: 15px 25px;
      border: none;
      border-radius: 5px;
      margin-right: 20px; }
      @media (max-width: 956px) {
        .footer__newsletter form input {
          width: 70%; } }
      @media (max-width: 768px) {
        .footer__newsletter form input {
          width: 100%;
          margin-bottom: 20px; } }
    @media (max-width: 768px) {
      .footer__newsletter form .btn__main {
        width: 100%; } }
  .footer__socials {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center; }
    .footer__socials i {
      color: #fcdb00;
      font-size: 40px;
      margin: 0 20px;
      transition: all 0.3s ease; }
      .footer__socials i:hover {
        color: #898989; }
  .footer__nav {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: start;
        justify-content: flex-start;
    -ms-flex-align: start;
        align-items: flex-start;
    margin-top: 130px;
    padding-bottom: 130px; }
    @media (max-width: 956px) {
      .footer__nav {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap; } }
  .footer__item {
    width: 165px; }
    @media (max-width: 956px) {
      .footer__item {
        width: 25%;
        text-align: center; } }
    .footer__item:nth-child(1) {
      width: 33%; }
      @media (max-width: 956px) {
        .footer__item:nth-child(1) {
          width: 100%;
          margin-bottom: 40px; } }
    .footer__item:last-child {
      width: 140px; }
      @media (max-width: 956px) {
        .footer__item:last-child {
          width: 25%; } }
    .footer__item ul {
      padding: 0;
      margin: 0; }
    .footer__item a {
      color: #fff;
      font-family: "PT Sans", sans-serif;
      font-weight: 400;
      font-size: 16px;
      line-height: 20px;
      transition: all 0.3s ease; }
      .footer__item a:hover {
        color: #fcdb00; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
